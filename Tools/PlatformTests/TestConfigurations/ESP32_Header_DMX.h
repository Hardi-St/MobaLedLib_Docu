// This file contains the DCC and LED definitions.
//
// It was automatically generated by the program Prog_Generator_MobaLedLib.xlsm Ver. 3.1.0A      by Hardi
// File creation: 20.12.2021 11:53:59
// (Attention: The display in the Arduino IDE is not updated if Options/External Editor is disabled)

#ifndef __LEDS_AUTOPROG_H__
#define __LEDS_AUTOPROG_H__

#ifndef ARDUINO_RASPBERRY_PI_PICO
#define FASTLED_INTERNAL       // Disable version number message in FastLED library (looks like an error)
#include <FastLED.h>           // The FastLED library must be installed in addition if you got the error message "..fatal error: FastLED.h: No such file or directory"
                               // Arduino IDE: Sketch / Include library / Manage libraries                    Deutsche IDE: Sketch / Bibliothek einbinden / Bibliothek verwalten
                               //              Type "FastLED" in the "Filter your search..." field                          "FastLED" in das "Grenzen Sie ihre Suche ein" Feld eingeben
                               //              Select the entry and click "Install"                                         Gefundenen Eintrag auswaehlen und "Install" anklicken
#else
#include <PicoFastLED.h>       // Juergens minimum version or FastLED for Raspberry Pico
#endif

#include <MobaLedLib.h>

#define START_MSG "LEDs_AutoProg Ver 1: Ver_3.1.0 20.12.21 11:53"

#define TWO_BUTTONS_PER_ADDRESS 1      // Two buttons (Red/Green) are used (DCC/CAN)
#ifdef NUM_LEDS
  #warning "'NUM_LEDS' definition in the main program is replaced by the included 'LEDs_AutoProg.h' with 20"
  #undef NUM_LEDS
#endif

#define NUM_LEDS 20                    // Number of LEDs (Maximal 256 RGB LEDs could be used)

#define LEDS_PER_CHANNEL ",20"

#define RECEIVE_LED_COLOR_PER_RS232
#define USE_EXT_ADDR
#define USE_RS232_OR_SPI_AS_INPUT      // Use the RS232 or SPI Input to read DCC/SX commands from the second Arduino and from the PC (The SPI is only used if enabled with USE_SPI_COM)
#define ADDR_OFFSET 0

#define ADDR_MSK  0x3FFF  // 14 Bits are used for the Address

#define S_ONOFF   (uint16_t)0
#define B_RED     (uint16_t)(1<<14)
#define B_GREEN   (uint16_t)(2<<14)
#define B_RESERVE (uint16_t)(3<<14)    // Not used at the moment
#define B_TAST    B_RED


typedef struct
    {
    uint16_t AddrAndTyp; // Addr range: 0..16383. The upper two bytes are used for the type
    uint8_t  InCnt;
    } __attribute__ ((packed)) Ext_Addr_T;

// Definition of external adressesconst PROGMEM Ext_Addr_T Ext_Addr[] =         { // Addr & Typ    InCnt
           { 22   + S_ONOFF, 1 },      // Excel row 6           { 1    + S_ONOFF, 1 },      // Excel row 8           { 2    + S_ONOFF, 1 },      // Excel row 9           { 3    + S_ONOFF, 1 },      // Excel row 10           { 10   + S_ONOFF, 1 },      // Excel row 11           { 11   + S_ONOFF, 1 },      // Excel row 12           { 12   + S_ONOFF, 1 },      // Excel row 13           { 13   + S_ONOFF, 1 },      // Excel row 14           { 14   + S_ONOFF, 1 },      // Excel row 15           { 15   + S_ONOFF, 1 },      // Excel row 16           { 16   + S_ONOFF, 1 },      // Excel row 17           { 17   + S_ONOFF, 1 },      // Excel row 18         };


// Input channel defines for local inputs and expert users
#define INCH_DCC_22_ONOFF       0      // Excel row 6#define INCH_DCC_1_ONOFF        1      // Excel row 8#define INCH_DCC_2_ONOFF        2      // Excel row 9#define INCH_DCC_3_ONOFF        3      // Excel row 10#define INCH_DCC_10_ONOFF       4      // Excel row 11#define INCH_DCC_11_ONOFF       5      // Excel row 12#define INCH_DCC_12_ONOFF       6      // Excel row 13#define INCH_DCC_13_ONOFF       7      // Excel row 14#define INCH_DCC_14_ONOFF       8      // Excel row 15#define INCH_DCC_15_ONOFF       9      // Excel row 16#define INCH_DCC_16_ONOFF       10     // Excel row 17#define INCH_DCC_17_ONOFF       11     // Excel row 18

//*** Analog switches ***

#include "AnalogScannerESP32.h"   
AnalogScannerESP32 scanner;       // Creates an instance of the analog pin scanner.

#include <Analog_Buttons10.h>
Analog_Buttons10_C AButtons1(36);


#include "Read_LDR.h"     // Darkness sensor

#define SwitchA1                12
// Reserve channels: 7 because MobaLedLib_Copy_to_InpStruct always writes multiple of 8 channels

/*********************/
#define SETUP_FASTLED()                                                      \
/*********************/                                                      \
  CLEDController& controller0 = FastLED.addLeds<NEOPIXEL, 27>(leds+  0, 20); \
                                                                             \
  controller0.clearLeds(256);                                                \
  FastLED.setDither(DISABLE_DITHER);       // avoid sending slightly modified brightness values
/*End*/

#define USE_ADDITIONAL_SETUP_PROC                                  // Activate the usage of the Additional_Setup_Proc()

//--------------------------
void Additional_Setup_Proc()
//--------------------------
{
  int scanOrder[] = {36,35};
  const int SCAN_COUNT = sizeof(scanOrder) / sizeof(scanOrder[0]);
  scanner.setScanPins(SCAN_COUNT, scanOrder);
  Init_DarknessSensor(35, 50, 50); // Attention: The analogRead() function can't be used together with the darkness sensor !
  scanner.setCallback(35, Darkness_Detection_Callback);

}

/****************************/
#define Additional_Loop_Proc() \
/****************************/ \
{                              \
  uint16_t Button;             \
  Button = AButtons1.Get(); MobaLedLib_Copy_to_InpStruct((uint8_t*)&Button, 2, 12);      \
}


//*******************************************************************
// *** Configuration array which defines the behavior of the LEDs ***
MobaLedLib_Configuration()
  {
  RGB_Heartbeat(0)                                                                                            /* Excel row 5                                                                                                                                                                                 */  Const(1, C1, 0, 0, 127)                                                                                     /* Excel row 6                                                                                                                                                                                 */  Const(3, C2, 1, 0, 255)                                                                                     /* Excel row 8                                                                                                                                                                                 */  Const(3, C3, 2, 0, 255)                                                                                     /* Excel row 9                                                                                                                                                                                 */  Const(4, C1, 3, 0, 255)                                                                                     /* Excel row 10                                                                                                                                                                                */  Const(4, C2, 4, 0, 10)                                                                                      /* Excel row 11                                                                                                                                                                                */  Const(4, C3, 5, 0, 255)                                                                                     /* Excel row 12                                                                                                                                                                                */  Const(5, C1, 6, 0, 255)                                                                                     /* Excel row 13                                                                                                                                                                                */  Const(5, C2, 7, 0, 255)                                                                                     /* Excel row 14                                                                                                                                                                                */  Const(5, C3, 8, 0, 255)                                                                                     /* Excel row 15                                                                                                                                                                                */  Const(6, C1, 9, 0, 255)                                                                                     /* Excel row 16                                                                                                                                                                                */  Const(6, C2, 10, 0, 255)                                                                                    /* Excel row 17                                                                                                                                                                                */  Const(6, C3, 11, 0, 255)                                                                                    /* Excel row 18                                                                                                                                                                                */  #define ENABLE_STORE_STATUS                                                                                 /* Excel row 22                                                                                                                                                                                */  Const(7, C3, SI_1, 0, 255)                                                                                  /* Excel row 24                                                                                                                                                                                */  RGB_Heartbeat(8)                                                                                            /* Excel row 25                                                                                                                                                                                */  #define READ_LDR                                                                                            /* Excel row 26                                                                                                                                                                                */  #define READ_LDR_DEBUG                                                                                      /* Excel row 27                                                                                                                                                                                */  ConstRGB(9, SwitchA1, 0, 0, 0, 127, 127, 127)                                                               /* Excel row 31                                                                                                                                                                                */
  EndCfg // End of the configuration
  };
//*******************************************************************

//---------------------------------------------
void Set_Start_Values(MobaLedLib_C &MobaLedLib)
//---------------------------------------------
{
}


// if function returns TRUE the calling loop stops
typedef bool(*HandleValue_t) (uint8_t CallbackType, uint8_t ValueId, uint8_t* Value, uint16_t EEPromAddr, uint8_t TargetValueId, uint8_t Options);


#define InCnt_MSK  0x0007  // 3 Bits are used for the InCnt
#define IS_COUNTER (uint8_t)0x80
#define IS_PULSE   (uint8_t)0x40
#define IS_TOGGLE  (uint8_t)0x00
#define COUNTER_ID

typedef struct
    {
    uint8_t TypAndInCnt; // Type bit 7, InCnt bits 0..3, reserved 0 bits 4..6
    uint8_t Channel;
    } __attribute__ ((packed)) Store_Channel_T;

// Definition of channels and counters that need to store state in EEPromconst PROGMEM Store_Channel_T Store_Values[] =         { // Mode + InCnt , Channel
           { IS_TOGGLE + 1 , INCH_DCC_22_ONOFF   },      // Excel row 6           { IS_TOGGLE + 1 , INCH_DCC_1_ONOFF    },      // Excel row 8           { IS_TOGGLE + 1 , INCH_DCC_2_ONOFF    },      // Excel row 9           { IS_TOGGLE + 1 , INCH_DCC_3_ONOFF    },      // Excel row 10           { IS_TOGGLE + 1 , INCH_DCC_10_ONOFF   },      // Excel row 11           { IS_TOGGLE + 1 , INCH_DCC_11_ONOFF   },      // Excel row 12           { IS_TOGGLE + 1 , INCH_DCC_12_ONOFF   },      // Excel row 13           { IS_TOGGLE + 1 , INCH_DCC_13_ONOFF   },      // Excel row 14           { IS_TOGGLE + 1 , INCH_DCC_14_ONOFF   },      // Excel row 15           { IS_TOGGLE + 1 , INCH_DCC_15_ONOFF   },      // Excel row 16           { IS_TOGGLE + 1 , INCH_DCC_16_ONOFF   },      // Excel row 17           { IS_TOGGLE + 1 , INCH_DCC_17_ONOFF   },      // Excel row 18         };






#endif // __LEDS_AUTOPROG_H__
