// This file contains the DCC and LED definitions.
//
// It was automatically generated by the program Prog_Generator_MobaLedLib.xlsm Ver. 3.1.0A      by Hardi
// File creation: 20.12.2021 11:53:59
// (Attention: The display in the Arduino IDE is not updated if Options/External Editor is disabled)

#ifndef __LEDS_AUTOPROG_H__
#define __LEDS_AUTOPROG_H__

#ifndef ARDUINO_RASPBERRY_PI_PICO
#define FASTLED_INTERNAL       // Disable version number message in FastLED library (looks like an error)
#include <FastLED.h>           // The FastLED library must be installed in addition if you got the error message "..fatal error: FastLED.h: No such file or directory"
                               // Arduino IDE: Sketch / Include library / Manage libraries                    Deutsche IDE: Sketch / Bibliothek einbinden / Bibliothek verwalten
                               //              Type "FastLED" in the "Filter your search..." field                          "FastLED" in das "Grenzen Sie ihre Suche ein" Feld eingeben
                               //              Select the entry and click "Install"                                         Gefundenen Eintrag auswaehlen und "Install" anklicken
#else
#include <PicoFastLED.h>       // Juergens minimum version or FastLED for Raspberry Pico
#endif

#include <MobaLedLib.h>

#define START_MSG "LEDs_AutoProg Ver 1: Ver_3.1.0 20.12.21 11:53"

#define TWO_BUTTONS_PER_ADDRESS 1      // Two buttons (Red/Green) are used (DCC/CAN)
#ifdef NUM_LEDS
  #warning "'NUM_LEDS' definition in the main program is replaced by the included 'LEDs_AutoProg.h' with 20"
  #undef NUM_LEDS
#endif

#define NUM_LEDS 20                    // Number of LEDs (Maximal 256 RGB LEDs could be used)

#define LEDS_PER_CHANNEL ",20"

#define RECEIVE_LED_COLOR_PER_RS232
#define USE_EXT_ADDR
#define USE_RS232_OR_SPI_AS_INPUT      // Use the RS232 or SPI Input to read DCC/SX commands from the second Arduino and from the PC (The SPI is only used if enabled with USE_SPI_COM)
#define ADDR_OFFSET 0

#define ADDR_MSK  0x3FFF  // 14 Bits are used for the Address

#define S_ONOFF   (uint16_t)0
#define B_RED     (uint16_t)(1<<14)
#define B_GREEN   (uint16_t)(2<<14)
#define B_RESERVE (uint16_t)(3<<14)    // Not used at the moment
#define B_TAST    B_RED


typedef struct
    {
    uint16_t AddrAndTyp; // Addr range: 0..16383. The upper two bytes are used for the type
    uint8_t  InCnt;
    } __attribute__ ((packed)) Ext_Addr_T;

// Definition of external adressesconst PROGMEM Ext_Addr_T Ext_Addr[] =         { // Addr & Typ    InCnt
           { 1    + S_ONOFF, 1 },      // Fader (pc)           { 2    + S_ONOFF, 1 },      // Excel row 5           { 3    + S_ONOFF, 1 },      // Excel row 6           { 4    + S_ONOFF, 1 },      // Excel row 7           { 5    + S_ONOFF, 1 },      // Excel row 8           { 6    + S_ONOFF, 1 },      // Excel row 9           { 7    + S_ONOFF, 1 },      // Excel row 10           { 8    + S_ONOFF, 1 },      // Excel row 11           { 9    + S_ONOFF, 1 },      // Excel row 12         };


// Input channel defines for local inputs and expert users
#define INCH_DCC_1_ONOFF        0      // Fader (pc)#define INCH_DCC_2_ONOFF        1      // Excel row 5#define INCH_DCC_3_ONOFF        2      // Excel row 6#define INCH_DCC_4_ONOFF        3      // Excel row 7#define INCH_DCC_5_ONOFF        4      // Excel row 8#define INCH_DCC_6_ONOFF        5      // Excel row 9#define INCH_DCC_7_ONOFF        6      // Excel row 10#define INCH_DCC_8_ONOFF        7      // Excel row 11#define INCH_DCC_9_ONOFF        8      // Excel row 12

/*********************/
#define SETUP_FASTLED()                                                      \
/*********************/                                                      \
                                                                             \
  FastLED.setDither(DISABLE_DITHER);       // avoid sending slightly modified brightness values
/*End*/

#include "DmxInterface.h"     // DMX512 Interface
#define USE_DMX_PIN 27
#define DMX_LED_OFFSET 0
#define DMX_CHANNEL_COUNT 60
DMXInterface dmxInterface;


//*******************************************************************
// *** Configuration array which defines the behavior of the LEDs ***
MobaLedLib_Configuration()
  {
  // Use_DMX512()                                                                                             /* Excel row 3                                                                                                                                                                                 */  APatternT1(0,192,0,1,0,255,0,0,3 Sec,1)                                                                     /* Fader (pc)                                                                                                                                                                                  */  APatternT1(0,193,1,1,0,255,0,0,3 Sec,1)                                                                     /* Excel row 5                                                                                                                                                                                 */  APatternT1(0,194,2,1,0,255,0,0,3 Sec,1)                                                                     /* Excel row 6                                                                                                                                                                                 */  Const(1, C1, 3, 0, 127)                                                                                     /* Excel row 7                                                                                                                                                                                 */  Const(1, C2, 4, 0, 127)                                                                                     /* Excel row 8                                                                                                                                                                                 */  Const(1, C3, 5, 0, 127)                                                                                     /* Excel row 9                                                                                                                                                                                 */  Const(2, C1, 6, 0, 127)                                                                                     /* Excel row 10                                                                                                                                                                                */  Const(2, C2, 7, 0, 127)                                                                                     /* Excel row 11                                                                                                                                                                                */  Const(2, C3, 8, 0, 127)                                                                                     /* Excel row 12                                                                                                                                                                                */
  EndCfg // End of the configuration
  };
//*******************************************************************

//---------------------------------------------
void Set_Start_Values(MobaLedLib_C &MobaLedLib)
//---------------------------------------------
{
  MobaLedLib.Set_Input(0, 1);                                                                                 // Fader (pc)  MobaLedLib.Set_Input(1, 1);                                                                                 // Excel row 5  MobaLedLib.Set_Input(2, 1);                                                                                 // Excel row 6}


// if function returns TRUE the calling loop stops
typedef bool(*HandleValue_t) (uint8_t CallbackType, uint8_t ValueId, uint8_t* Value, uint16_t EEPromAddr, uint8_t TargetValueId, uint8_t Options);


#define InCnt_MSK  0x0007  // 3 Bits are used for the InCnt
#define IS_COUNTER (uint8_t)0x80
#define IS_PULSE   (uint8_t)0x40
#define IS_TOGGLE  (uint8_t)0x00
#define COUNTER_ID

typedef struct
    {
    uint8_t TypAndInCnt; // Type bit 7, InCnt bits 0..3, reserved 0 bits 4..6
    uint8_t Channel;
    } __attribute__ ((packed)) Store_Channel_T;

// Definition of channels and counters that need to store state in EEPromconst PROGMEM Store_Channel_T Store_Values[] =         { // Mode + InCnt , Channel
           { IS_TOGGLE + 1 , INCH_DCC_4_ONOFF    },      // Excel row 7           { IS_TOGGLE + 1 , INCH_DCC_5_ONOFF    },      // Excel row 8           { IS_TOGGLE + 1 , INCH_DCC_6_ONOFF    },      // Excel row 9           { IS_TOGGLE + 1 , INCH_DCC_7_ONOFF    },      // Excel row 10           { IS_TOGGLE + 1 , INCH_DCC_8_ONOFF    },      // Excel row 11           { IS_TOGGLE + 1 , INCH_DCC_9_ONOFF    },      // Excel row 12         };






#endif // __LEDS_AUTOPROG_H__
